#+TITLE: go

* Go language

#+BEGIN_SRC emacs-lisp

(use-package go-mode
  :ensure t
  :init
  (load-file "$GOPATH/src/golang.org/x/tools/cmd/oracle/oracle.el")
  :config
  (defun my-go-mode-hook ()
   ; Use goimports instead of go-fmt
   (setq gofmt-command "goimports")
   (add-hook 'before-save-hook 'gofmt-before-save)

   (if (not (string-match "go" compile-command))
    (set (make-local-variable 'compile-command)
     "go generate && go build -v && go test -v && go vet"))

   (defhydra go-hydra (:color red :exit t)
    "Go"
    ("e" go-errcheck)
    ("," godef-jump)
    ("." pop-tag-mark))

   (evil-define-key 'normal go-mode-map (kbd ",") 'go-hydra/body))
   (add-hook 'go-mode-hook 'my-go-mode-hook))

(use-package go-eldoc
  :ensure t
  :config
  (add-hook 'go-mode-hook 'go-eldoc-setup))

(use-package company-go
  :ensure t
  :config
  (defun setup-company-go ()
   (set (make-local-variable 'company-backends) '(company-go)))

  (add-hook 'go-mode-hook 'setup-company-go))

(use-package go-errcheck
  :ensure t)
#+END_SRC
