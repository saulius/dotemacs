#+TITLE: tao-clojure

* Clojure

Configuration for [[http://clojure.org][Clojure]] programming language.

#+BEGIN_SRC emacs-lisp
(bundle! clojure-mode
  (eval-after-load 'clojure-mode
    '(progn
       (defun clojure-mode-defaults ()
         (smartparens-strict-mode 1)
         (subword-mode 1))

       (setq my-clojure-mode-hook 'clojure-mode-defaults)

       (add-hook 'my-clojure-mode-hook (lambda ()
                                    (run-hooks 'my-clojure-mode-hook))))))
(bundle! cider
  (setq cider-repl-pop-to-buffer-on-connect t)
  (setq cider-prompt-save-file-on-load nil)

  (eval-after-load 'cider
    '(progn
       (add-hook 'cider-mode-hook 'cider-turn-on-eldoc-mode)

       (defun cider-repl-mode-defaults ()
         (subword-mode 1)
         (smartparens-strict-mode 1)
         (space-chord-define clojure-mode-map "," 'cider-test-run-tests)
         (space-chord-define clojure-mode-map "n" 'cider-repl-set-ns)
         (space-chord-define clojure-mode-map "l" 'cider-load-current-buffer)
         (space-chord-define clojure-mode-map "c" 'cider-eval-defun-at-point)
         (space-chord-define clojure-mode-map "d" 'cider-doc-map)
         (space-chord-define clojure-mode-map "r" 'cider-switch-to-repl-buffer))

       (setq cider-repl-mode-hook 'cider-repl-mode-defaults)
       ;; Prevent C-c C-k from prompting to save the file corresponding to the buffer being loaded, if it's modified:
       (setq cider-prompt-save-file-on-load nil)

       (add-hook 'repl-mode-hook (lambda ()
                                 (run-hooks 'cider-repl-mode-hook))))))
#+END_SRC
