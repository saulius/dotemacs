#+TITLE: tao-osx

* OSX related settings and tweaks

** Exec path with GUI Emacs

In case I'll run Emacs in GUI mode it won't load environment variables properly.
Lets fix that.

#+BEGIN_SRC emacs-lisp
(el-get 'sync '(exec-path-from-shell))
#+END_SRC

** General settings for GUI Emacs

#+BEGIN_SRC emacs-lisp
(when (display-graphic-p)
  (exec-path-from-shell-initialize) ;; makes important shell variables like $PATH work

  ;; This makes left-option do M-
  (setq ns-alternate-modifier 'meta)
  (setq ns-right-alternate-modifier nil)
  (setq ns-command-modifier 'super)
  (setq ns-function-modifier 'hyper)
  (setq ns-use-srgb-colorspace t)

  (when (fboundp 'toggle-frame-fullscreen)
    (global-set-key (kbd "s-<return>") 'toggle-frame-fullscreen)))
#+END_SRC

** General settings for console Emacs

#+BEGIN_SRC emacs-lisp
(unless (display-graphic-p)
  ;; Make sure cut/paste works properly. Gotten from:
  ;; http://mindlev.wordpress.com/2011/06/13/emacs-in-a-terminal-on-osx/#comment-20
  (defun copy-from-osx ()
    "Copies the current clipboard content using the `pbcopy` command"
    (shell-command-to-string "pbpaste"))

  (defun paste-to-osx (text &optional push)
    "Copies the top of the kill ring stack to the OSX clipboard"
    (let ((process-connection-type nil))
      (let ((proc (start-process "pbcopy" "*Messages*" "pbcopy")))
        (process-send-string proc text)
        (process-send-eof proc))))

  ;; Override defaults to use the mac copy and paste
  (setq interprogram-cut-function 'paste-to-osx)
  (setq interprogram-paste-function 'copy-from-osx))
#+END_SRC
